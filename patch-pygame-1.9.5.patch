build/temp.freebsd-11.2-RELEASE-amd64-2.7/core.o:(.bss+0x0): multiple definition of `PyGAME_C_API'
build/temp.freebsd-11.2-RELEASE-amd64-2.7/gen/_renpy.o:(.bss+0x0): first defined here
build/temp.freebsd-11.2-RELEASE-amd64-2.7/subpixel.o:(.bss+0x0): multiple definition of `PyGAME_C_API'
build/temp.freebsd-11.2-RELEASE-amd64-2.7/gen/_renpy.o:(.bss+0x0): first defined here

ImportError: /usr/local/lib/python2.7/site-packages/_renpy.so: Undefined symbol "RWopsFromPython"
ImportError: /usr/local/lib/python2.7/site-packages/_renpy.so: Undefined symbol "RWopsFromPythonThreaded"
ImportError: /usr/local/lib/python2.7/site-packages/_renpy.so: Undefined symbol "PySurface_AsSurface"

--- module/_renpy.pyx.orig	2014-07-22 03:10:55 UTC
+++ module/_renpy.pyx
@@ -28,7 +28,7 @@ cdef extern from "pygame/pygame.h":
         pass
 
     void import_pygame_rwobject()
-    SDL_RWops* RWopsFromPython(object obj)
+    SDL_RWops* pgRWops_FromObject(object obj)
 
 
 cdef extern from "renpy.h":
@@ -106,7 +106,7 @@ def save_png(surf, file, compress=-1):
     if not isinstance(surf, PygameSurface):
         raise Exception("save_png requires a pygame Surface as its first argument.")
 
-    save_png_core(surf, RWopsFromPython(file), compress)
+    save_png_core(surf, pgRWops_FromObject(file), compress)
 
 
 def pixellate(pysrc, pydst, avgwidth, avgheight, outwidth, outheight):
--- module/core.c.orig	2013-06-08 02:38:29 UTC
+++ module/core.c
@@ -1,6 +1,6 @@
 #include "renpy.h"
 #include "IMG_savepng.h"
-#include <pygame/pygame.h>
+#include <pygame/_pygame.h>
 #include <stdio.h>
 #include <math.h>
 
@@ -28,7 +28,7 @@ void core_init() {
 void save_png_core(PyObject *pysurf, SDL_RWops *rw, int compress) {
     SDL_Surface *surf;
     
-    surf = PySurface_AsSurface(pysurf);
+    surf = pgSurface_AsSurface(pysurf);
 
     /* Can't release GIL, since we're not using threaded RWops. */
     IMG_SavePNG_RW(rw, surf, compress);
@@ -69,8 +69,8 @@ void pixellate32_core(PyObject *pysrc,
     unsigned char *srcpixels;
     unsigned char *dstpixels;
 
-    src = PySurface_AsSurface(pysrc);
-    dst = PySurface_AsSurface(pydst);
+    src = pgSurface_AsSurface(pysrc);
+    dst = pgSurface_AsSurface(pydst);
 
     Py_BEGIN_ALLOW_THREADS
     
@@ -211,8 +211,8 @@ void pixellate24_core(PyObject *pysrc,
     unsigned char *srcpixels;
     unsigned char *dstpixels;
 
-    src = PySurface_AsSurface(pysrc);
-    dst = PySurface_AsSurface(pydst);
+    src = pgSurface_AsSurface(pysrc);
+    dst = pgSurface_AsSurface(pydst);
         
     Py_BEGIN_ALLOW_THREADS
 
@@ -344,8 +344,8 @@ void map32_core(PyObject *pysrc,
     char *srcp;
     char *dstp;
 
-    src = PySurface_AsSurface(pysrc);
-    dst = PySurface_AsSurface(pydst);
+    src = pgSurface_AsSurface(pysrc);
+    dst = pgSurface_AsSurface(pydst);
         
     Py_BEGIN_ALLOW_THREADS
 
@@ -403,8 +403,8 @@ void map24_core(PyObject *pysrc,
     char *srcp;
     char *dstp;
 
-    src = PySurface_AsSurface(pysrc);
-    dst = PySurface_AsSurface(pydst);
+    src = pgSurface_AsSurface(pysrc);
+    dst = pgSurface_AsSurface(pydst);
         
     Py_BEGIN_ALLOW_THREADS
 
@@ -468,8 +468,8 @@ void linmap32_core(PyObject *pysrc,
     char *srcp;
     char *dstp;
 
-    src = PySurface_AsSurface(pysrc);
-    dst = PySurface_AsSurface(pydst);
+    src = pgSurface_AsSurface(pysrc);
+    dst = pgSurface_AsSurface(pydst);
 
     Py_BEGIN_ALLOW_THREADS
 
@@ -527,8 +527,8 @@ void linmap24_core(PyObject *pysrc,
     char *srcp;
     char *dstp;
 
-    src = PySurface_AsSurface(pysrc);
-    dst = PySurface_AsSurface(pydst);
+    src = pgSurface_AsSurface(pysrc);
+    dst = pgSurface_AsSurface(pydst);
 
     Py_BEGIN_ALLOW_THREADS
     
@@ -587,8 +587,8 @@ void xblur32_core(PyObject *pysrc,
     unsigned char *dstp;
 
     
-    src = PySurface_AsSurface(pysrc);
-    dst = PySurface_AsSurface(pydst);
+    src = pgSurface_AsSurface(pysrc);
+    dst = pgSurface_AsSurface(pydst);
 
     Py_BEGIN_ALLOW_THREADS
     
@@ -732,8 +732,8 @@ void alphamunge_core(PyObject *pysrc,
     unsigned char *dstp;
 
     
-    src = PySurface_AsSurface(pysrc);
-    dst = PySurface_AsSurface(pydst);
+    src = pgSurface_AsSurface(pysrc);
+    dst = pgSurface_AsSurface(pydst);
         
     Py_BEGIN_ALLOW_THREADS
     
@@ -795,8 +795,8 @@ void scale32_core(PyObject *pysrc, PyObject *pydst,
     unsigned char *dstpixels;
 
     
-    src = PySurface_AsSurface(pysrc);
-    dst = PySurface_AsSurface(pydst);
+    src = pgSurface_AsSurface(pysrc);
+    dst = pgSurface_AsSurface(pydst);
         
     Py_BEGIN_ALLOW_THREADS
 
@@ -908,8 +908,8 @@ void scale24_core(PyObject *pysrc, PyObject *pydst,
     unsigned char *dstpixels;
 
     
-    src = PySurface_AsSurface(pysrc);
-    dst = PySurface_AsSurface(pydst);
+    src = pgSurface_AsSurface(pysrc);
+    dst = pgSurface_AsSurface(pydst);
 
     Py_BEGIN_ALLOW_THREADS
         
@@ -1014,8 +1014,8 @@ int transform32_std(PyObject *pysrc, PyObject *pydst,
     unsigned char *srcpixels;
     unsigned char *dstpixels;
 
-    src = PySurface_AsSurface(pysrc);
-    dst = PySurface_AsSurface(pydst);
+    src = pgSurface_AsSurface(pysrc);
+    dst = pgSurface_AsSurface(pydst);
         
     Py_BEGIN_ALLOW_THREADS
         
@@ -1213,8 +1213,8 @@ int transform32_mmx(PyObject *pysrc, PyObject *pydst,
     unsigned char *srcpixels;
     unsigned char *dstpixels;
 
-    src = PySurface_AsSurface(pysrc);
-    dst = PySurface_AsSurface(pydst);
+    src = pgSurface_AsSurface(pysrc);
+    dst = pgSurface_AsSurface(pydst);
         
     Py_BEGIN_ALLOW_THREADS
         
@@ -1485,9 +1485,9 @@ void blend32_core_std(PyObject *pysrca, PyObject *pysr
     unsigned char *srcbpixels;
     unsigned char *dstpixels;
 
-    srca = PySurface_AsSurface(pysrca);
-    srcb = PySurface_AsSurface(pysrcb);
-    dst = PySurface_AsSurface(pydst);
+    srca = pgSurface_AsSurface(pysrca);
+    srcb = pgSurface_AsSurface(pysrcb);
+    dst = pgSurface_AsSurface(pydst);
         
     Py_BEGIN_ALLOW_THREADS
 
@@ -1543,9 +1543,9 @@ void blend32_core_mmx(PyObject *pysrca, PyObject *pysr
     unsigned char *srcbpixels;
     unsigned char *dstpixels;
 
-    srca = PySurface_AsSurface(pysrca);
-    srcb = PySurface_AsSurface(pysrcb);
-    dst = PySurface_AsSurface(pydst);
+    srca = pgSurface_AsSurface(pysrca);
+    srcb = pgSurface_AsSurface(pysrcb);
+    dst = pgSurface_AsSurface(pydst);
         
     Py_BEGIN_ALLOW_THREADS
 
@@ -1639,10 +1639,10 @@ void imageblend32_core_std(PyObject *pysrca, PyObject 
     unsigned char *dstpixels;
     unsigned char *imgpixels;
 
-    srca = PySurface_AsSurface(pysrca);
-    srcb = PySurface_AsSurface(pysrcb);
-    dst = PySurface_AsSurface(pydst);
-    img = PySurface_AsSurface(pyimg);
+    srca = pgSurface_AsSurface(pysrca);
+    srcb = pgSurface_AsSurface(pysrcb);
+    dst = pgSurface_AsSurface(pydst);
+    img = pgSurface_AsSurface(pyimg);
     
     Py_BEGIN_ALLOW_THREADS
 
@@ -1709,10 +1709,10 @@ void imageblend32_core_mmx(PyObject *pysrca, PyObject 
     unsigned char *dstpixels;
     unsigned char *imgpixels;
 
-    srca = PySurface_AsSurface(pysrca);
-    srcb = PySurface_AsSurface(pysrcb);
-    dst = PySurface_AsSurface(pydst);
-    img = PySurface_AsSurface(pyimg);
+    srca = pgSurface_AsSurface(pysrca);
+    srcb = pgSurface_AsSurface(pysrcb);
+    dst = pgSurface_AsSurface(pydst);
+    img = pgSurface_AsSurface(pyimg);
 
     Py_BEGIN_ALLOW_THREADS
     
@@ -1809,8 +1809,8 @@ void colormatrix32_core(PyObject *pysrc, PyObject *pyd
     unsigned char *srcpixels;
     unsigned char *dstpixels;
 
-    src = PySurface_AsSurface(pysrc);
-    dst = PySurface_AsSurface(pydst);
+    src = pgSurface_AsSurface(pysrc);
+    dst = pgSurface_AsSurface(pydst);
     
     Py_BEGIN_ALLOW_THREADS
 
@@ -1888,8 +1888,8 @@ void staticgray_core(PyObject *pysrc, PyObject *pydst,
     unsigned char *srcpixels;
     unsigned char *dstpixels;
 
-    src = PySurface_AsSurface(pysrc);
-    dst = PySurface_AsSurface(pydst);
+    src = pgSurface_AsSurface(pysrc);
+    dst = pgSurface_AsSurface(pydst);
     
     Py_BEGIN_ALLOW_THREADS;
 
--- module/ffdecode.c.orig	2014-07-06 14:22:40 UTC
+++ module/ffdecode.c
@@ -19,7 +19,7 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
  */
 
-#include <pygame/pygame.h>
+#include <pygame/_pygame.h>
 #include <math.h>
 #include <limits.h>
 #include <libavutil/avstring.h>
@@ -616,7 +616,7 @@ static void alloc_picture(void *opaque, PyObject *pysu
 
     ffpy_needs_alloc = 0;
 
-    surf = PySurface_AsSurface(pysurf);
+    surf = pgSurface_AsSurface(pysurf);
     is->width = surf->w;
     is->height = surf->h;
 
--- module/include/pygame.pxd.orig	2014-07-04 20:19:24 UTC
+++ module/include/pygame.pxd
@@ -12,7 +12,7 @@ cdef extern from "pygame/pygame.h":
         int w
         int h
 
-    SDL_Surface *PySurface_AsSurface(object)
+    SDL_Surface *pgSurface_AsSurface(object)
     int SDL_SetAlpha(SDL_Surface *surface, unsigned int flag, char alpha)
 
     enum:
--- module/pysdlsound/sound.pyx.orig	2014-07-08 03:12:10 UTC
+++ module/pysdlsound/sound.pyx
@@ -25,7 +25,7 @@ cdef extern from "pygame/pygame.h":
         pass
 
     void import_pygame_rwobject()
-    SDL_RWops* RWopsFromPythonThreaded(object obj)
+    SDL_RWops* pgRWops_FromFileObject(object obj)
 
 cdef extern from "pss.h":
 
@@ -66,7 +66,7 @@ def check_error():
 def play(channel, file, name, paused=False, fadein=0, tight=False):
     cdef SDL_RWops *rw
 
-    rw = RWopsFromPythonThreaded(file)
+    rw = pgRWops_FromFileObject(file)
 
     if rw == NULL:
         raise Exception, "Could not create RWops."
@@ -88,7 +88,7 @@ def play(channel, file, name, paused=False, fadein=0, 
 def queue(channel, file, name, fadein=0, tight=False):
     cdef SDL_RWops *rw
 
-    rw = RWopsFromPythonThreaded(file)
+    rw = pgRWops_FromFileObject(file)
 
     if tight:
         tight = 1
--- module/subpixel.c.orig	2013-06-08 02:38:29 UTC
+++ module/subpixel.c
@@ -7,7 +7,7 @@
  */
 
 #include "renpy.h"
-#include <pygame/pygame.h>
+#include <pygame/_pygame.h>
 #include <stdio.h>
 #include <math.h>
 
@@ -171,8 +171,8 @@ int subpixel32(PyObject *pysrc, PyObject *pydst,
         return 0;
     }
     
-    src = PySurface_AsSurface(pysrc);
-    dst = PySurface_AsSurface(pydst);
+    src = pgSurface_AsSurface(pysrc);
+    dst = pgSurface_AsSurface(pydst);
         
     Py_BEGIN_ALLOW_THREADS
         
--- renpy/angle/gldraw.pyx.orig	2014-07-22 03:26:17 UTC
+++ renpy/angle/gldraw.pyx
@@ -1113,7 +1113,7 @@ cdef class GLDraw:
 
         # A surface the size of the framebuffer.
         full = renpy.display.pgrender.surface_unscaled(self.physical_size, False)
-        surf = PySurface_AsSurface(full)
+        surf = pgSurface_AsSurface(full)
 
         # Create an array that can hold densely-packed pixels.
         raw_pixels = <unsigned char *> malloc(surf.w * surf.h * 4)
--- renpy/angle/gltexture.pyx.orig	2014-10-05 01:47:19 UTC
+++ renpy/angle/gltexture.pyx
@@ -1134,7 +1134,7 @@ def premultiply(
     cdef unsigned int *pp
     cdef unsigned int *ppend
 
-    surf = PySurface_AsSurface(pysurf)
+    surf = pgSurface_AsSurface(pysurf)
     pixels = <unsigned char *> surf.pixels
 
     # The start of the pixel data to read out.
--- renpy/display/accelerator.pyx.orig	2014-09-24 01:07:49 UTC
+++ renpy/display/accelerator.pyx
@@ -40,8 +40,8 @@ def nogil_copy(src, dest):
     cdef SDL_Surface *src_surf
     cdef SDL_Surface *dst_surf
 
-    src_surf = PySurface_AsSurface(src)
-    dest_surf = PySurface_AsSurface(dest)
+    src_surf = pgSurface_AsSurface(src)
+    dest_surf = pgSurface_AsSurface(dest)
 
     old_alpha = src_surf.flags & SDL_SRCALPHA
 
--- renpy/gl/gldraw.pyx.orig	2014-07-22 03:26:17 UTC
+++ renpy/gl/gldraw.pyx
@@ -1110,7 +1110,7 @@ cdef class GLDraw:
 
         # A surface the size of the framebuffer.
         full = renpy.display.pgrender.surface_unscaled(self.physical_size, False)
-        surf = PySurface_AsSurface(full)
+        surf = pgSurface_AsSurface(full)
 
         # Create an array that can hold densely-packed pixels.
         raw_pixels = <unsigned char *> malloc(surf.w * surf.h * 4)
--- renpy/gl/gltexture.pyx.orig	2014-10-05 01:47:19 UTC
+++ renpy/gl/gltexture.pyx
@@ -1131,7 +1131,7 @@ def premultiply(
     cdef unsigned int *pp
     cdef unsigned int *ppend
 
-    surf = PySurface_AsSurface(pysurf)
+    surf = pgSurface_AsSurface(pysurf)
     pixels = <unsigned char *> surf.pixels
 
     # The start of the pixel data to read out.
--- renpy/text/ftfont.pyx.orig	2014-07-04 20:19:24 UTC
+++ renpy/text/ftfont.pyx
@@ -584,7 +584,7 @@ cdef class FTFont:
 
         self.setup()
 
-        surf = PySurface_AsSurface(pysurf)
+        surf = pgSurface_AsSurface(pysurf)
         pixels = <unsigned char *> surf.pixels
         pitch = surf.pitch
 
